<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEcAAAAXCAYAAABZPlLoAAAABGdBTUEAAOD8YVAtlgAAAvdpQ0NQUGhv
        dG9zaG9wIElDQyBwcm9maWxlAAA4y2NgYJ7g6OLkyiTAwFBQVFLkHuQYGREZpcB+noGNgZkBDBKTiwsc
        AwJ8QOy8/LxUBlTAyMDw7RqIZGC4rAsyi4E0wJoMtBhIHwBio5TU4mQg/QWI08tLCoDijDFAtkhSNphd
        AGJnhwQ5A9ktDAxMPCWpFSC9DM75BZVFmekZJQqGlpaWCo4p+UmpCsGVxSWpucUKnnnJ+UUF+UWJJakp
        QLVQO0CA1yW/RME9MTNPwchAlYHKABSOEBYifBBiCJBcWlQGD0oGBgEGBQYDBgeGAIZEhnqGBQxHGd4w
        ijO6MJYyrmC8xyTGFMQ0gekCszBzJPNC5jcsliwdLLdY9VhbWe+xWbJNY/vGHs6+m0OJo4vjC2ci5wUu
        R64t3JrcC3ikeKbyCvFO4hPmm8Yvw79YQEdgh6Cr4BWhVKEfwr0iKiJ7RcNFv4hNEjcSvyJRISkneUwq
        X1pa+oRMmay67C25PnkX+T8KWxULlfSU3iqvVSlQNVH9qXZQvUsjVFNJ84PWAe1JOqm6VnqCeq/0jxgs
        MKw1ijG2NZE3ZTZ9aXbBfKfFEssJVnXWuTZxtoF2rvbWDsaOOk5qzkouCq7ybgruyh7qnrpeJt42Pu6+
        wX4J/vkB9YETg5YG7wq5GPoynClCLtIqKiK6ImZm7J64BwlsibpJYckNKWtSb6ZzZFhkZmbNzb6Yy55n
        n19RsKnwXbF2SVbpqrI3FfqVJVW7ahhrveqm1j9s1GuqaT7bKtdW2H60U7qrqPt0r2pfY//diTaTZk/+
        OzV+2uEZGjP7Z32fkzD39HzzBUsXiSxuXfJtWebyeytDVp1e47J233rLDds2mWzestVk2/YdVjv373bd
        c3Zf2P4HB3MO/TzSfkz8+IqT1qfOnUk+++v8pIval45eSbz67/qcmza37t6pv6d8/8TDvMdiT/Y/y3wh
        8vLg6/y38u8ufGj6ZPr51dcF38N/Cvw69af1n+P//wANAA8013ReGAAAAAlwSFlzAAALEgAACxIB0t1+
        /AAABENJREFUWEfNmNtLVFEUh1NRcUzT0dR88oIPCoKvgoIIYghe0C6El1QSbzneNX0NKuoxIvBP6Kke
        oocgiIiKXhMS7IKSIv0Rp/Ubzm/Ys11n5pyZSRS+0bNmzt5rfe6zL3NBfi4KRS7FwiWhxKVUCLuUCeUu
        l10qXCpdqkhOTk5fXl7edTMWELZpwz41mBdgrgC5sw7UBFgj6gWonR7gpFBQ5VAQG/ItJz8//+bExMTe
        0tLSyfj4+B4kIZ4iphRiyrA533KGh4e/ra+vO1NTUz8KCwtvI5YBTDnElGKiCcqoHN5IMZocJsNkq/r7
        +z9HIpHjubm5w7KysojErqRBOpLOl5yurq63ELOwsHBUV1f3WGJawangRxAw5YBkgpLJAYHlsFMmUdna
        2vrCHTEHTU1NzySmFalRraB9DgSVlEwOBZlyKCgzchobG58uLi4er66uOt3d3e8kphVmognxwr7XFkT8
        CDpbOfL4PMBjJHIcMDk5uS8T8c+ZmZlfJtPT07/TwW7PZGRkZLenp+c9cpGcEskxBZlyKCizcurr6x/J
        4xSTA9bW1s4MrIqbm5vO1taWg60DVsry8nIsBBT0X+RQEBsx5VBQ9L/T3Ny8I1KOVlZWnLGxMScUCo0J
        oxaIaXHC970+p8VGsFWorq7expyHUbuxseHMz88fuoLOVI46ekBbW9srEXS8vLzsNDQ0PJEY5gF7vrDR
        5hgvtPvj5p3c3NxrQ0NDXyEII0hiGZNDQfwA5VCQLYeConKEuKW8trb2ocTM5LXiTDQhQPssMNuOkZ2d
        3YMRhEespqbmvsT8yOFgSFmOJogdxwQNDg5+wTwwOzt7UFpaOicxtQhBK9gvWnsgOhl3dHS8xhyE33Jt
        ykHeyeTAAeVEN4F4oRwK4g2mIFvOKUFZWVlXR0dHdyFIzlf7OGdJXCuEaMUnQmuDROXIHPgccgYGBj7J
        tS2HNaQlx+/oOSWooKDgFs5VSBBD3D14cokFWmGaCBvtPmC2rclhnrYc1kYxCeVQkCknJUEygrplNRku
        KiqakOu45A20QoEfIeRUu+3t7S8hp7Oz841ca3JYh5ccuojJSTR6vAShM01QTJIHdkFa0cmw2yAV+JpE
        Vs0T7MHkmnLsUUM5rM9TTsj9g8Ggo8dLkEmmJNn3xNHb2/sBey7Zb32Xa/TLvGw5rMeUw4FBMZ5yggii
        JCaSriSSVAiW7pKSkumWlpYdjBjs1mUr8Uc2hvfkffRny2HuphzWacuBl+hLpgTZkogtCcQE4WyE74Aw
        kQcBZyscIzDHyA79LwQlEGPLYU22mJTl+BXkV1JUDna229vbDna3fsF2AXIgpK+v7yOOMVbb7JNyTDGU
        w/pMOfAQSI4piI37EeRLEla2cDh8VzaOMz6ZLS4uviP7qBtyPwTHtSewH4oJKodOEsoxBfmVAwILEmKP
        WQDsNgj78JLDWhLIuRD6B/jmAJehEYAdAAAAAElFTkSuQmCC
</value>
  </data>
</root>